#ifndef MAGICS_GAURD
#define MAGICS_GAURD

#include "types.h"

namespace Magics {
  void init();
}

// Magics
extern Bitboard MagicMasksBB[PIECETYPE_NB][SQUARE_NB];
extern Bitboard MagicAttacksBBB[SQUARE_NB][512];
extern Bitboard MagicAttacksRBB[SQUARE_NB][4096];

const int MaskBitLength[PIECETYPE_NB][SQUARE_NB] = {
  { 0 }, { 0 }, { 0 },
  { // Bishop
    6, 5, 5, 5, 5, 5, 5, 6,
    5, 5, 5, 5, 5, 5, 5, 5,
    5, 5, 7, 7, 7, 7, 5, 5,
    5, 5, 7, 9, 9, 7, 5, 5,
    5, 5, 7, 9, 9, 7, 5, 5,
    5, 5, 7, 7, 7, 7, 5, 5,
    5, 5, 5, 5, 5, 5, 5, 5,
    6, 5, 5, 5, 5, 5, 5, 6
  }, { // Rook
    12, 11, 11, 11, 11, 11, 11, 12, 
    11, 10, 10, 10, 10, 10, 10, 11,
    11, 10, 10, 10, 10, 10, 10, 11,
    11, 10, 10, 10, 10, 10, 10, 11,
    11, 10, 10, 10, 10, 10, 10, 11,
    11, 10, 10, 10, 10, 10, 10, 11,
    11, 10, 10, 10, 10, 10, 10, 11,
    12, 11, 11, 11, 11, 11, 11, 12
  }
};
 
const Bitboard MagicNumbers[5][SQUARE_NB] = {
  { 0 }, { 0 }, { 0 },
  { // Bishop
    9304441232522551809ULL,
    5197197952615010356ULL,
    290631748237168640ULL,
    1262155822310490112ULL,
    9264203776884064257ULL,
    4684385864763049009ULL,
    2313025036383944704ULL,
    1443478456087938120ULL,

    774090679976016ULL,
    1306430928654044196ULL,
    9223522687463227393ULL,
    153764521465348226ULL,
    3458768981727394832ULL,
    4791866292238811168ULL,
    18019449408331792ULL,
    594476269954934304ULL,

    649675308061426176ULL,
    9225626087636239376ULL,
    9225624437976732160ULL,
    2348631614491214848ULL,
    4612820716585222404ULL,
    1163336218600539908ULL,
    4611967502002823172ULL,
    4611971893606649872ULL,

    4522497571819584ULL,
    11819710416710353408ULL,
    110340390449709568ULL,
    586594127551402240ULL,
    3476924047873318916ULL,
    144258128899737088ULL,
    1173198708800522768ULL,
    3171099286652911910ULL,

    1154082898125521664ULL,
    4612814125981503490ULL,
    21392253016736776ULL,
    167160127293952ULL,
    4917934366771970304ULL,
    4748069518046184193ULL,
    563517258269696ULL,
    1171227274402468352ULL,

    466228367853600ULL,
    1153486723179741744ULL,
    334354681235464ULL,
    37154980429432832ULL,
    9259436156364260608ULL,
    6757632831390208ULL,
    3794354570994385412ULL,
    9224506751188523264ULL,

    74810278297600ULL,
    76708530406555656ULL,
    5800637426016723456ULL,
    18172728729665601ULL,
    2267776679936ULL,
    70403120890912ULL,
    90090701441875968ULL,
    2603661418834214928ULL,

    4641542200153342988ULL,
    73184600445159570ULL,
    653021948120926336ULL,
    703687443908608ULL,
    110762613381923332ULL,
    4665738048838314020ULL,
    3553759087100480ULL,
    582759550845696ULL
  },
  { // Rook
    9295448606603477248ULL,
    9241387810290683904ULL,
    10520418350834692225ULL,
    72092797872636160ULL,
    4755810075845592096ULL,
    144119594713360417ULL,
    288241373550806032ULL,
    16573247456075124868ULL,

    2460232036091172897ULL,
    1196286367813636ULL,
    74450682706399232ULL,
    140806208356480ULL,
    5764889067082770432ULL,
    5765170799975600136ULL,
    562984346723353ULL,
    1459729231436079362ULL,

    4629842803698974720ULL,
    4612289651384976258ULL,
    1481684827431239808ULL,
    364792119866427392ULL,
    504544445576775680ULL,
    9261793921032258560ULL,
    55173493501081616ULL,
    1161196429135478852ULL,

    2322170705379616ULL,
    35185445851136ULL,
    2312633599472435330ULL,
    563233421811728ULL,
    15024012757110360064ULL,
    4901042846389370884ULL,
    31527482315244872ULL,
    10151799449209988ULL,

    105828136780165ULL,
    864726313921941504ULL,
    2324210488411427073ULL,
    4611695914585690116ULL,
    2310351013338417152ULL,
    577023738864734340ULL,
    649659673972050192ULL,
    4611688922932576516ULL,

    4646811287846914ULL,
    76562616910168064ULL,
    9007341006553152ULL,
    4900479551766921242ULL,
    585542752725434384ULL,
    2486057380769956112ULL,
    9223427012503339264ULL,
    1134981632360452ULL,

    7068963674293174784ULL,
    1171287747375138880ULL,
    13511366354670720ULL,
    671040845612404864ULL,
    720858892842566912ULL,
    283676147712128ULL,
    4684307116537156096ULL,
    180322144682496ULL,

    19804136227362ULL,
    282420943265921ULL,
    141021226801666ULL,
    3459046126504641929ULL,
    576742846327162881ULL,
    9289233718052865ULL,
    864832974180356108ULL,
    145294587333762ULL
  }
};

Bitboard edge_mask(Square sq);
Bitboard rook_mask(Square sq);
Bitboard bishop_mask(Square sq);
Bitboard index_to_occupation(ULL index, int bits, ULL mask);

#endif
